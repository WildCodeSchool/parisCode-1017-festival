{% extends 'base.html.twig' %}

{% block stylesheets %}

    <link rel="stylesheet" type="text/css" href="{{ asset('css/stylediscover.css') }}">

{% endblock %}

{% block body %}

    <div class="row center-align">
        <div class="col s12">
            <h2>{{ app.request.get('_route') == 'concert_new' ? 'Add a ' : 'Edit ' }}Concert</h2>
        </div>
    </div>

    {% if error is defined %}
        <div class="center-align">
            <p>Thanks for helping out! This concert is now being updated by admin.</p>
            <a href="{{ path('discover') }}" class="center-align">Return to Discover</a>
        </div>
    {% else %}

    <div class="card">
        <div class="card-tabs">
            <ul class="tabs tabs-fixed-width">
                <li class="tab disabled"><a href="#general">General</a></li>
                <li class="tab"><a class="active" href="#lineup">Line Up</a></li>

            </ul>
        </div>
        <div class="card-content">
            <div id="general">
            </div>
            <div id="lineup">
                <!--FORM -->
                <div class="row">
                    {{ form_start(form) }}
                    <!--$artist -->
                    <div class="row">
                        <div class="input-field col s12">
                            <i class="material-icons prefix">music_video</i>
                            {{ form_label(form.artist.name) }}
                            {{ form_widget(form.artist.name) }}
                            {{ form_errors(form.artist.name) }}
                        </div>
                    </div>
                    <!--$location -->
                    <div class="row">
                        <div class="input-field col s12">
                            <i class="material-icons prefix">location_city</i>
                            {{ form_label(form.location.address) }}
                            {{ form_widget(form.location.address) }}
                            {{ form_errors(form.location.address) }}
                        </div>
                    </div>
                    <div class="row">
                        <!--$start -->
                        <div class="input-field col s6">
                            <i class="material-icons prefix">date_range</i>
                            {{ form_label(form.start) }}
                            {{ form_widget(form.start) }}
                            {{ form_errors(form.start) }}
                        </div>
                        <!--$end -->
                        <div class="input-field col s6">
                            <i class="material-icons prefix">date_range</i>
                            {{ form_label(form.end) }}
                            {{ form_widget(form.end) }}
                            {{ form_errors(form.end) }}
                        </div>
                    </div>
                    <div class="row">
                        <!--TimeStart -->
                        <div class="input-field col s6">
                            <i class="material-icons prefix">access_time</i>
                            {% if form.start.vars.data is not null %}
                            {{ form_widget(form.timestart, {'value' : form.start.vars.data|date('H:i')}) }}
                            {% else %}
                            {{ form_label(form.timestart) }}
                            {{ form_widget(form.timestart) }}
                            {% endif %}
                            {{ form_errors(form.timestart) }}
                        </div>
                        <!--TimeEnd -->
                        <div class="input-field col s6">
                            <i class="material-icons prefix">access_time</i>
                            {% if form.start.vars.data is not null %}
                                {{ form_widget(form.timeend, {'value' : form.end.vars.data|date('H:i')}) }}
                            {% else %}
                                {{ form_label(form.timeend) }}
                                {{ form_widget(form.timeend) }}
                            {% endif %}
                            {{ form_errors(form.timeend) }}
                        </div>
                    </div>
                    {% if app.request.get('_route') != 'concert_new' %}
                        <div class="row">
                            <!--$isCancelled -->
                            <div class="input-field col s6">
                                <i class="material-icons prefix">insert_link</i>
                                {{ form_label(form.isCancelled) }}
                                {{ form_widget(form.isCancelled) }}
                                {{ form_errors(form.isCancelled) }}
                            </div>
                        </div>
                    {% endif %}
                    <div class="row center-align">
                        <input type="submit" class="waves-effect waves-light btn" value={{ app.request.get('_route') == 'concert_new' ? 'Create' : 'Edit' }}>
                    </div>

                    {{ form_end(form) }}
                </div>
                <!-- .FORM -->
            </div>
        </div>
    </div>
    {% endif %}

{% endblock body %}

{% block javascripts %}

    <!--Autocomplete location and genre -->
    <script>
        $(document).ready(function(){
            $('input.autocomplete-location').autocomplete({
                data: {
                    "Hippodrome": null,
                    "Paris": null,
                    "Hamburg": 'https://placehold.it/250x250'
                },
                limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
                onAutocomplete: function(val) {
                    // Callback function when value is autcompleted.
                },
                minLength: 1, // The minimum length of the input for the autocomplete to start. Default: 1.
            });
            $('input.autocomplete-genre').autocomplete({
                data: {
                    "Rock": null,
                    "Pop": null,
                    "Drum n bass": 'https://placehold.it/250x250'
                },
                limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
                onAutocomplete: function(val) {
                    // Callback function when value is autcompleted.
                },
                minLength: 1, // The minimum length of the input for the autocomplete to start. Default: 1.
            });
            $('.datepicker').pickadate({
                selectMonths: true, // Creates a dropdown to control month
                selectYears: 3, // Creates a dropdown of 15 years to control year,
                today: 'Today',
                clear: 'Clear',
                close: 'Ok',
                format: 'yyyy-mm-dd',
                closeOnSelect: true // Close upon selecting a date,
            });
            $('.timepicker').pickatime({
                default: '00:00', // Set default time: 'now', '1:30AM', '16:30'
                fromnow: 0,       // set default time to * milliseconds from now (using with default = 'now')
                twelvehour: true, // Use AM/PM or 24-hour format
                donetext: 'OK', // text for done-button
                // cleartext: 'Clear', // text for clear-button
                canceltext: 'Cancel', // Text for cancel-button
                autoclose: true, // automatic close timepicker
                ampmclickable: true, // make AM PM clickable
                aftershow: function(){} //Function for after opening timepicker
            });
        });
    </script>
    <!--.Autocomplete location and genre -->

    <script>
        function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            autocomplete = new google.maps.places.Autocomplete(
                /** @type {!HTMLInputElement} */(document.getElementById('appbundle_concert_location_address')),
                // {types: ['geocode']} /** NB LN-T Remove to get places autocomplete
            );
            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
        }
    </script>

    <script async defer
            src={{ 'https://maps.googleapis.com/maps/api/js?key=' ~ google_maps_api  ~ '&libraries=places&callback=initAutocomplete' }}>
    </script>

{% endblock javascripts %}